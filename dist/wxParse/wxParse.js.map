{"version":3,"sources":["wxParse/wxParse.js"],"names":["wxParse","bindName","type","data","target","imagePadding","that","transData","HtmlToJson","html2json","converter","showdown","Converter","html","makeHtml","view","bindData","setData","wxParseImgLoad","wxParseImgTap","e","nowImgUrl","dataset","src","tagFrom","from","length","wx","previewImage","current","urls","idx","calMoreImageInfo","temData","images","temImages","recal","wxAutoImageCal","detail","width","height","imageWidth","imageheight","originalWidth","originalHeight","windowWidth","windowHeight","autoWidth","autoHeight","results","getSystemInfo","success","res","padding","wxParseTemArray","temArrayName","bindNameReg","total","array","obj","i","simArr","nodes","push","JSON","parse","emojisInit","reg","baseSrc","emojis","module","exports"],"mappings":"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","file":"wxParse.js","sourcesContent":["/**\n * author: Di (微信小程序开发工程师)\n * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\n *               垂直微信小程序开发交流社区\n * github地址: https://github.com/icindy/wxParse\n * for: 微信小程序富文本解析\n * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\n */\n\n/**\n * utils函数引入\n **/\n/*eslint-disable */\nimport showdown from './showdown.js';\nimport HtmlToJson from './html2json.js';\n/**\n * 配置及公有属性\n **/\n/**\n * 主函数入口区\n **/\nfunction wxParse(bindName = 'wxParseData', type='html', data='<div class=\"color:red;\">数据不能为空</div>', target,imagePadding) {\n  var that = target;\n  var transData = {};//存放转化后的数据\n  if (type == 'html') {\n    transData = HtmlToJson.html2json(data, bindName);\n    // console.log(JSON.stringify(transData, ' ', ' '));\n  } else if (type == 'md' || type == 'markdown') {\n    var converter = new showdown.Converter();\n    var html = converter.makeHtml(data);\n    transData = HtmlToJson.html2json(html, bindName);\n    // console.log(JSON.stringify(transData, ' ', ' '));\n  }\n  transData.view = {};\n  transData.view.imagePadding = 0;\n  if(typeof(imagePadding) != 'undefined'){\n    transData.view.imagePadding = imagePadding\n  }\n  var bindData = {};\n  bindData[bindName] = transData;\n  that.setData(bindData)\n  that.wxParseImgLoad = wxParseImgLoad;\n  that.wxParseImgTap = wxParseImgTap;\n}\n// 图片点击事件\nfunction wxParseImgTap(e) {\n  // var that = this;\n  var nowImgUrl = e.target.dataset.src;\n  var tagFrom = e.target.dataset.from;\n  if (typeof (tagFrom) != 'undefined' && tagFrom.length > 0) {\n    wx.previewImage({\n      current: nowImgUrl, // 当前显示图片的http链接\n      urls: [nowImgUrl] // 需要预览的图片http链接列表\n    })\n  }\n}\n\n/**\n * 图片视觉宽高计算函数区 \n **/\nfunction wxParseImgLoad(e) {\n  var that = this;\n  var tagFrom = e.target.dataset.from;\n  var idx = e.target.dataset.idx;\n  if (typeof (tagFrom) != 'undefined' && tagFrom.length > 0) {\n    calMoreImageInfo(e, idx, that, tagFrom)\n  } \n}\n// 假循环获取计算图片视觉最佳宽高\nfunction calMoreImageInfo(e, idx, that, bindName) {\n  var temData = that.data[bindName];\n  if (temData.images.length == 0) {\n    return;\n  }\n  var temImages = temData.images;\n  //因为无法获取view宽度 需要自定义padding进行计算，稍后处理\n  var recal = wxAutoImageCal(e.detail.width, e.detail.height,that,bindName); \n  temImages[idx].width = recal.imageWidth;\n  temImages[idx].height = recal.imageheight; \n  temData.images = temImages;\n  var bindData = {};\n  bindData[bindName] = temData;\n  that.setData(bindData);\n}\n\n// 计算视觉优先的图片宽高\nfunction wxAutoImageCal(originalWidth, originalHeight,that,bindName) {\n  //获取图片的原始长宽\n  var windowWidth = 0, windowHeight = 0;\n  var autoWidth = 0, autoHeight = 0;\n  var results = {};\n  wx.getSystemInfo({\n    success: function (res) {\n      var padding = that.data[bindName].view.imagePadding;\n      windowWidth = res.windowWidth-2*padding;\n      windowHeight = res.windowHeight;\n      //判断按照那种方式进行缩放\n      // console.log(\"windowWidth\" + windowWidth);\n      if (originalWidth > windowWidth) {//在图片width大于手机屏幕width时候\n        autoWidth = windowWidth;\n        // console.log(\"autoWidth\" + autoWidth);\n        autoHeight = (autoWidth * originalHeight) / originalWidth;\n        // console.log(\"autoHeight\" + autoHeight);\n        results.imageWidth = autoWidth;\n        results.imageheight = autoHeight;\n      } else {//否则展示原来的数据\n        results.imageWidth = originalWidth;\n        results.imageheight = originalHeight;\n      }\n    }\n  })\n  return results;\n}\n\nfunction wxParseTemArray(temArrayName,bindNameReg,total,that){\n  var array = [];\n  var temData = that.data;\n  var obj = null;\n  for(var i = 0; i < total; i++){\n    var simArr = temData[bindNameReg+i].nodes;\n    array.push(simArr);\n  }\n\n  temArrayName = temArrayName || 'wxParseTemArray';\n  obj = JSON.parse('{\"'+ temArrayName +'\":\"\"}');\n  obj[temArrayName] = array;\n  that.setData(obj);\n}\n\n/**\n * 配置emojis\n * \n */\n\nfunction emojisInit(reg='',baseSrc=\"/wxParse/emojis/\",emojis){\n   HtmlToJson.emojisInit(reg,baseSrc,emojis);\n}\n\nmodule.exports = {\n  wxParse: wxParse,\n  wxParseTemArray:wxParseTemArray,\n  emojisInit:emojisInit\n}\n/*eslint-enable */\n"]}