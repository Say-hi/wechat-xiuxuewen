{"version":3,"sources":["components/canvasdrawer/canvasdrawer.js"],"names":["Component","properties","painting","type","Object","value","view","observer","newVal","oldVal","console","log","data","isPainting","width","height","setData","readyPigment","index","imageList","tempFileList","ctx","cache","ready","wx","removeStorageSync","getStorageSync","createCanvasContext","methods","views","inter","setInterval","clearInterval","clearActions","drawRect","background","top","left","getImageList","downLoadImages","i","length","push","url","getImageInfo","then","file","startPainting","imageIndex","drawImage","measureText","showModal","title","content","drawText","draw","setStorageSync","saveImageToLocal","params","MaxLineNumber","breakWord","color","fontSize","lineHeight","textAlign","bolder","textDecoration","setTextBaseline","setTextAlign","setFillStyle","setFontSize","fillText","drawTextLine","fillTop","lineNum","substring","fillRect","Promise","resolve","reject","objExp","RegExp","test","src","complete","res","errMsg","path","Error","canvasToTempFilePath","x","y","canvasId","success","tempFilePath","triggerEvent"],"mappings":"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","file":"canvasdrawer.js","sourcesContent":["/*eslint-disable */\nComponent({\n  properties: {\n    painting: {\n      type: Object,\n      value: {view: []},\n      observer (newVal, oldVal) {\n        console.log(newVal)\n        if (!this.data.isPainting) {\n          if (newVal.width && newVal.height) {\n            this.setData({\n              isPainting: true\n            })\n            this.readyPigment()\n          }\n        }\n      }\n    }\n  },\n  data: {\n    width: 100,\n    height: 100,\n\n    index: 0,\n    imageList: [],\n    tempFileList: [],\n\n    isPainting: false\n  },\n  ctx: null,\n  cache: {},\n  ready () {\n    wx.removeStorageSync('canvasdrawer_pic_cache')\n    this.cache = wx.getStorageSync('canvasdrawer_pic_cache') || {}\n    this.ctx = wx.createCanvasContext('canvasdrawer', this)\n  },\n  methods: {\n    readyPigment () {\n      const { width, height, views } = this.data.painting\n      this.setData({\n        width,\n        height\n      })\n      const inter = setInterval(() => {\n        if (this.ctx) {\n          clearInterval(inter)\n          this.ctx.clearActions()\n          this.drawRect({\n            background: 'white',\n            top: 0,\n            left: 0,\n            width,\n            height\n          })\n          this.getImageList(views)\n          this.downLoadImages(0)\n        }\n      }, 100)\n    },\n    getImageList (views) {\n      const imageList = []\n      for (let i = 0; i < views.length; i++) {\n        if (views[i].type === 'image') {\n          imageList.push(views[i].url)\n        }\n      }\n      this.setData({\n        imageList\n      })\n    },\n    downLoadImages (index) {\n      const { imageList, tempFileList } = this.data\n      if (index < imageList.length) {\n        // console.log(imageList[index])\n        this.getImageInfo(imageList[index]).then(file => {\n          tempFileList.push(file)\n          this.setData({\n            tempFileList\n          })\n          this.downLoadImages(index + 1)\n        })\n      } else {\n        this.startPainting()\n      }\n    },\n    startPainting () {\n      const { tempFileList, painting: { views } } = this.data\n      for (let i = 0, imageIndex = 0; i < views.length; i++) {\n        if (views[i].type === 'image') {\n          this.drawImage({\n            ...views[i],\n            url: tempFileList[imageIndex]\n          })\n          imageIndex++\n        } else if (views[i].type === 'text') {\n          if (!this.ctx.measureText) {\n            wx.showModal({\n              title: '提示',\n              content: '当前微信版本过低，无法使用 measureText 功能，请升级到最新微信版本后重试。'\n            })\n          } else {\n            this.drawText(views[i])\n          }\n        } else if (views[i].type === 'rect') {\n          this.drawRect(views[i])\n        }\n      }\n      this.ctx.draw(true, () => {\n        wx.setStorageSync('canvasdrawer_pic_cache', this.cache)\n        this.saveImageToLocal()\n      })\n    },\n    drawImage (params) {\n      const { url, top = 0, left = 0, width = 0, height = 0 } = params\n      this.ctx.drawImage(url, left, top, width, height)\n    },\n    drawText (params) {\n      const { \n        MaxLineNumber = 2, \n        breakWord = false, \n        color = 'black', \n        content = '', \n        fontSize = 16, \n        top = 0, \n        left = 0, \n        lineHeight = 20, \n        textAlign = 'left', \n        width, \n        bolder = false,\n        textDecoration = 'none'\n      } = params\n\n      this.ctx.setTextBaseline('top')\n      this.ctx.setTextAlign(textAlign)\n      this.ctx.setFillStyle(color)\n      this.ctx.setFontSize(fontSize)\n\n      if (!breakWord) {\n        this.ctx.fillText(content, left, top)\n        this.drawTextLine(left, top, textDecoration, color, fontSize, content)\n      } else {\n        let fillText = ''\n        let fillTop = top\n        let lineNum = 1\n        for (let i = 0; i < content.length; i++) {\n          fillText += [content[i]]\n          if (this.ctx.measureText(fillText).width > width) {\n            if (lineNum === MaxLineNumber) {\n              if (i !== content.length) {\n                fillText = fillText.substring(0, fillText.length - 1) + '...'\n                this.ctx.fillText(fillText, left, fillTop)\n                this.drawTextLine(left, fillTop, textDecoration, color, fontSize, fillText)\n                fillText = ''\n                break\n              }\n            }\n            this.ctx.fillText(fillText, left, fillTop)\n            this.drawTextLine(left, fillTop, textDecoration, color, fontSize, fillText)\n            fillText = ''\n            fillTop += lineHeight\n            lineNum ++\n          }\n        }\n        this.ctx.fillText(fillText, left, fillTop)\n        this.drawTextLine(left, fillTop, textDecoration, color, fontSize, fillText)\n      }\n      \n      if (bolder) {\n        this.drawText({\n          ...params,\n          left: left + 0.3,\n          top: top + 0.3,\n          bolder: false,\n          textDecoration: 'none' \n        })\n      }\n    },\n    drawTextLine (left, top, textDecoration, color, fontSize, content) {\n      if (textDecoration === 'underline') {\n        this.drawRect({\n          background: color,\n          top: top + fontSize * 1.2,\n          left: left - 1,\n          width: this.ctx.measureText(content).width + 2,\n          height: 1\n        })\n      } else if (textDecoration === 'line-through') {\n        this.drawRect({\n          background: color,\n          top: top + fontSize * 0.6,\n          left: left - 1,\n          width: this.ctx.measureText(content).width + 2,\n          height: 1\n        })\n      }\n    },\n    drawRect (params) {\n      // console.log(params)\n      const { background, top = 0, left = 0, width = 0, height = 0 } = params\n      this.ctx.setFillStyle(background)\n      this.ctx.fillRect(left, top, width, height)\n    },\n    getImageInfo (url) {\n      return new Promise((resolve, reject) => {\n        /* 获得要在画布上绘制的图片 */\n        if (this.cache[url]) {\n          resolve(this.cache[url])\n        } else {\n          const objExp = new RegExp(/^http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- .\\/?%&=]*)?/)\n          if (objExp.test(url)) {\n            wx.getImageInfo({\n              src: url,\n              complete: res => {\n                if (res.errMsg === 'getImageInfo:ok') {\n                  this.cache[url] = res.path\n                  resolve(res.path)\n                } else {\n                  reject(new Error('getImageInfo fail'))\n                }\n              }\n            })\n          } else {\n            this.cache[url] = url\n            resolve(url)\n          }\n        }\n      })\n    },\n    saveImageToLocal () {\n      const { width, height } = this.data\n      wx.canvasToTempFilePath({\n        x: 0,\n        y: 0,\n        width,\n        height,\n        canvasId: 'canvasdrawer',\n        success: res => {\n          if (res.errMsg === 'canvasToTempFilePath:ok') {\n            this.setData({\n              isPainting: false,\n              imageList: [],\n              tempFileList: []\n            })\n            console.log(res.tempFilePath)\n            this.triggerEvent('getImage', {tempFilePath: res.tempFilePath})\n          }\n        } \n      }, this)\n    }\n  }\n})\n"]}